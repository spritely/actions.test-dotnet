name: Build

on: [push, workflow_dispatch]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-24.04
    steps:
      - id: version
        name: Get semantic version
        uses: spritely/actions.semantic-version/get@v0.2.2

      - name: Create .env for build
        shell: bash
        run: |
          cat > ./.devcontainer/.env <<EOF
          EOF

      - id: setup-tests
        name: Setup test container registry and package server
        run: |
          docker run -d -p 5000:5000 \
              -v ${{ github.workspace }}/tests/auth:/auth \
              -e REGISTRY_AUTH=htpasswd \
              -e REGISTRY_AUTH_HTPASSWD_REALM="Registry Realm" \
              -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \
              --name registry registry:2

          docker run -d -p 5001:80 \
              -e ApiKey=fake-token \
              --name baget loicsharma/baget:0.4.0-preview2

      - name: Mark expected failures
        if: always()
        run: |
          echo "::notice::Some tests validate failure behavior so annotations indicating failures is normal and expected. Look at the overall result and test results as a better measure of correctness."

      - name: Run tests - test-dotnet
        uses: devcontainers/ci@v0.3
        if: always()
        with:
          runCmd: |
            bats --version
            bats --print-output-on-failure --report-formatter junit --output ./test-results/ ./tests/
          push: never

      - name: Run test - code-coverage-test
        uses: ./tests/code-coverage-test
        if: always() && steps.setup-tests.outcome == 'success'

      - name: Run test - code-coverage-failure-test
        uses: ./tests/code-coverage-failure-test
        if: always() && steps.setup-tests.outcome == 'success'

      - name: Run test - custom-package-registry-test
        uses: ./tests/custom-package-registry-test
        if: always() && steps.setup-tests.outcome == 'success'

      - name: Run test - devcontainer-test
        uses: ./tests/devcontainer-test
        if: always() && steps.setup-tests.outcome == 'success'

      - name: Add test report title
        if: always()
        shell: bash
        run: echo "# Test Results" >> $GITHUB_STEP_SUMMARY

      - name: Generate test report
        uses: dorny/test-reporter@v2.0.0
        if: always()
        with:
          name: Test Results
          path: test-results/*.xml
          reporter: java-junit

      - name: Apply semantic version
        if: ${{ steps.version.outputs.branchName == github.event.repository.default_branch }}
        uses: spritely/actions.semantic-version/apply@v0.2.2
        with:
          version: ${{ steps.version.outputs.version }}
