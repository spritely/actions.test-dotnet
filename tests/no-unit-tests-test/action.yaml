name: Test dotnet builds project when no unit tests exist
description: Test to validate that build step runs and succeeds when no unit tests are found

runs:
  using: composite
  steps:
    - name: Initialize test
      shell: bash
      run: |
        source ${{ github.workspace }}/tests/test-reporter.sh
        initialize_test "Test dotnet builds project when no unit tests exist" "no-unit-tests-test"

    - id: test
      name: Run test-dotnet action
      uses: ./
      with:
        nugetAuthToken: fake-token
        projectFile: ./tests/sample-projects/no-unit-tests/MainProject/MainProject.csproj
        unitTestProjects: ./tests/sample-projects/no-unit-tests/**/*.UnitTests.csproj
        coverageThreshold: 80
        writeSummary: false

    - name: Assert action succeeded
      shell: bash
      if: always()
      run: |
        source ${{ github.workspace }}/tests/test-reporter.sh
        set_test_name "Assert action succeeded"

        if [ "${{ steps.test.outcome }}" == "success" ]; then
            success "Action succeeded when no unit tests exist"
        else
            failure "Action failed when it should have succeeded (no unit tests scenario)"
        fi

    - name: Assert no coverage data
      shell: bash
      if: always()
      run: |
        source ${{ github.workspace }}/tests/test-reporter.sh
        set_test_name "Assert no coverage data"

        # When no tests exist, coverage should be 0 and threshold should be true (no tests to fail)
        if [ "${{ steps.test.outputs.lineCoverage }}" == "0" ] && [ "${{ steps.test.outputs.coverageThresholdMet }}" == "true" ]; then
            success "Coverage outputs correct for no-unit-tests scenario"
        else
            failure "Coverage outputs incorrect: lineCoverage=${{ steps.test.outputs.lineCoverage }}, thresholdMet=${{ steps.test.outputs.coverageThresholdMet }}"
        fi

    - name: Finalize test
      shell: bash
      if: always()
      run: |
        source ${{ github.workspace }}/tests/test-reporter.sh
        finalize_test
